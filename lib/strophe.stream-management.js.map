{"version":3,"file":"strophe.stream-management.js","sources":["../src/strophe.stream-management.js"],"sourcesContent":["import { $build, Strophe } from 'strophe.js';\n\n/**\n* StropheJS - Stream Management XEP-0198\n*\n* This plugin implements stream management ACK capabilities of the specs XEP-0198.\n* Note: Resumption is not supported in this current implementation.\n*\n* Reference: http://xmpp.org/extensions/xep-0198.html\n*\n* @class streamManagement\n*/\nStrophe.addConnectionPlugin('streamManagement', {\n\n\t/**\n\t* @property {Boolean} logging: Set to true to enable logging regarding out of sync stanzas.\n\t*/\n\tlogging: true,\n\n\t/**\n\t* @property {Boolean} autoSendCountOnEveryIncomingStanza: Set to true to send an 'a' response after every stanza.\n\t* @default false\n\t* @public\n\t*/\n\tautoSendCountOnEveryIncomingStanza: false,\n\n\t/**\n\t* @property {Integer} requestResponseInterval: Set this value to send a request for counter on very interval\n\t* number of stanzas sent. Set to 0 to disable.\n\t* @default 5\n\t* @public\n\t*/\n\trequestResponseInterval: 5,\n\n\t/**\n\t* @property {Pointer} _c: Strophe connection instance.\n\t* @private\n\t*/\n\t_c: null,\n\n\t/**\n\t* @property {String} _NS XMPP Namespace.\n\t* @private\n\t*/\n\t_NS: 'urn:xmpp:sm:3',\n\n\t/**\n\t* @property {Boolean} _isStreamManagementEnabled\n\t* @private\n\t*/\n\t_isStreamManagementEnabled: false,\n\n\t/**\n\t* @property {Integer} _serverProcesssedStanzasCounter: Keeps count of stanzas confirmed processed by the server.\n\t* The server is the source of truth of this value. It is the 'h' attribute on the latest 'a' element received\n\t* from the server.\n\t* @private\n\t*/\n\t_serverProcesssedStanzasCounter: null,\n\n\t/**\n\t* @property {Integer} _clientProcessedStanzasCounter: Counter of stanzas received by the client from the server.\n\t* Client is the source of truth of this value. It is the 'h' attribute in the 'a' sent from the client to\n\t* the server.\n\t* @private\n\t*/\n\t_clientProcessedStanzasCounter: null,\n\n\t/**\n\t* @property {Integer} _clientSentStanzasCounter\n\t* @private\n\t*/\n\t_clientSentStanzasCounter: null,\n\n\t/**\n\t* Stores a reference to Strophe connection xmlOutput function to wrap counting functionality.\n\t* @method _originalXMLOutput\n\t* @type {Handler}\n\t* @private\n\t*/\n\t_originalXMLOutput: null,\n\n\t/**\n\t* @property {Handler} _requestHandler: Stores reference to handler that process count request from server.\n\t* @private\n\t*/\n\t_requestHandler: null,\n\n\t/**\n\t* @property {Handler} _incomingHandler: Stores reference to handler that processes incoming stanzas count.\n\t* @private\n\t*/\n\t_incomingHandler: null,\n\n\t/**\n\t* @property {Integer} _requestResponseIntervalCount: Counts sent stanzas since last response request.\n\t*/\n\t_requestResponseIntervalCount: 0,\n\n\t/**\n\t * @property {boolean} _isSupported: indicates whether or not the server has advertised support for the stream\n\t * management namespace.\n\t */\n\t_isSupported: false,\n\n\t/**\n\t* @property {Queue} _unacknowledgedStanzas: Maintains a list of packet ids for stanzas which have yet to be acknowledged.\n\t*/\n\t_unacknowledgedStanzas: [],\n\n\t/**\n\t* @property {Array} _acknowledgedStanzaListeners: Stores callbacks for each stanza acknowledged by the server.\n\t* Provides the packet id of the stanza as a parameter.\n\t* @private\n\t*/\n\t_acknowledgedStanzaListeners: [],\n\n\taddAcknowledgedStanzaListener: function(listener) {\n\t\tthis._acknowledgedStanzaListeners.push(listener);\n\t},\n\n\tenable: function(resume) {\n\t\tif (!this._isSupported) {\n\t\t\tthrow new Error('The server doesn\\'t support urn:xmpp:sm:3 namespace');\n\t\t} else if (this._connectionStatus !== Strophe.Status.CONNECTED) {\n\t\t\tthrow new Error('enable() can only be called in the CONNECTED state');\n\t\t}\n\t\tthis._c.send($build('enable', { xmlns: this._NS, resume }));\n\t\tthis._c.flush();\n\t\tthis._c.pause();\n\t},\n\n\tgetResumeToken: function() {\n\t\treturn this._resumeToken;\n\t},\n\n\tisSupported() {\n\t\treturn this._isSupported;\n\t},\n\n\tresume: function() {\n\t\tif (!this.getResumeToken()) {\n\t\t\tthrow new Error('No resume token');\n\t\t}\n\t\tif (this._connectionStatus !== Strophe.Status.DISCONNECTED) {\n\t\t\tthrow new Error('resume() can only be called in the DISCONNECTED state');\n\t\t}\n\n\t\tthis._c.options.explicitResourceBinding = true;\n\t\tthis._resuming = true;\n\n\t\tthis._originalConnect.apply(this._c, this._connectArgs);\n\t},\n\n\trequestAcknowledgement: function() {\n\t\tif (this._connectionStatus !== Strophe.Status.CONNECTED) {\n\t\t\tthrow new Error('requestAcknowledgement() can only be called in the CONNECTED state');\n\t\t}\n\t\tthis._requestResponseIntervalCount = 0;\n\t\tthis._c.send($build('r', { xmlns: this._NS }));\n\t},\n\n\tgetOutgoingCounter: function() {\n\t\treturn this._clientSentStanzasCounter;\n\t},\n\n\tgetIncomingCounter: function() {\n\t\treturn this._clientProcessedStanzasCounter;\n\t},\n\n\tinit: function(conn) {\n\t\tthis._c = conn;\n\t\tStrophe.addNamespace('SM', this._NS);\n\n\t\tStrophe.log = function (level, msg) {\n\t\t\tconsole.error(level, msg);\n\t\t};\n\n\t\t// Storing original xmlOutput function to use additional logic\n\t\tthis._originalXMLOutput = this._c.xmlOutput;\n\t\tthis._c.xmlOutput = this.xmlOutput.bind(this);\n\n\t\tthis._originalConnect = this._c.connect;\n\t\tthis._c.connect = this._interceptConnectArgs.bind(this);\n\n\t\tthis._originalOnStreamFeaturesAfterSASL = this._c._onStreamFeaturesAfterSASL;\n\t\tthis._c._onStreamFeaturesAfterSASL = this._onStreamFeaturesAfterSASL.bind(this);\n\n\t\tthis._originalDoDisconnect = this._c._doDisconnect;\n\t\tthis._c._doDisconnect = this._interceptDoDisconnect.bind(this);\n\n\t\tthis._originalDisconnect = this._c.disconnect;\n\t\tthis._c.disconnect = this._interceptDisconnect.bind(this);\n\t},\n\n\t_interceptDisconnect: function() {\n\t\tthis._resumeToken = undefined;\n\t\tthis._originalDisconnect.apply(this._c, arguments);\n\t},\n\n\t_interceptDoDisconnect: function() {\n\t\tif (this.getResumeToken()\n\t\t\t\t&& !this._resuming\n\t\t\t\t&& this._c.connected && !this._c.disconnecting) {\n\t\t\tthis._resumeState = {\n\t\t\t\thandlers: this._c.handlers,\n\t\t\t\ttimedHandlers: this._c.timedHandlers,\n\t\t\t\tremoveTimeds: this._c.removeTimeds,\n\t\t\t\tremoveHandlers: this._c.removeHandlers,\n\t\t\t\taddTimeds: this._c.addTimeds,\n\t\t\t\taddHandlers: this._c.addHandlers\n\t\t\t};\n\t\t\tthis._storedJid = this._c.jid;\n\n\t\t\tthis.logging && Strophe.debug('SM stored resume state, handler count: ' + this._resumeState.handlers.length);\n\t\t}\n\n\t\t// Remove any queued stanzas from the buffer that have failed to send while the socket was closed,\n\t\t// as they would interfere with the resume flow. They will be resent anyway.\n\t\tthis._c._data = [];\n\n\t\tthis._originalDoDisconnect.apply(this._c, arguments);\n\t},\n\n\t_interceptConnectArgs: function() {\n\t\tthis._connectArgs = arguments;\n\n\t\tthis._originalConnect.apply(this._c, arguments);\n\t},\n\n\t_onStreamFeaturesAfterSASL: function(elem) {\n\t\tthis._isSupported = elem.getElementsByTagNameNS(this._NS, \"sm\").length > 0;\n\n\t\treturn this._originalOnStreamFeaturesAfterSASL.apply(this._c, arguments);\n\t},\n\n\tstatusChanged: function (status) {\n\t\tthis._connectionStatus = status;\n\t\tif (!this.getResumeToken()\n\t\t\t&& (status === Strophe.Status.CONNECTED || status === Strophe.Status.DISCONNECTED)) {\n\t\t\tthis.logging && Strophe.debug('SM reset state');\n\n\t\t\tthis._serverProcesssedStanzasCounter = 0;\n\t\t\tthis._clientProcessedStanzasCounter = 0;\n\n\t\t\tthis._clientSentStanzasCounter = 0;\n\n\t\t\tthis._isStreamManagementEnabled = false;\n\t\t\tthis._requestResponseIntervalCount = 0;\n\n\t\t\t// FIXME not described in JSDocs\n\t\t\tthis._resuming = false;\n\n\t\t\tif (status === Strophe.Status.DISCONNECTED) {\n\t\t\t\tthis._isSupported = false;\n\t\t\t}\n\n\t\t\tthis._unacknowledgedStanzas = [];\n\n\t\t\tif (this._requestHandler) {\n\t\t\t\tthis._c.deleteHandler(this._requestHandler);\n\t\t\t}\n\n\t\t\tif (this._incomingHandler) {\n\t\t\t\tthis._c.deleteHandler(this._incomingHandler);\n\t\t\t}\n\n\t\t\tthis._requestHandler = this._c.addHandler(this._handleServerRequestHandler.bind(this), this._NS, 'r');\n\t\t\tthis._ackHandler = this._c.addHandler(this._handleServerAck.bind(this), this._NS, 'a');\n\t\t\tthis._incomingHandler = this._c.addHandler(this._incomingStanzaHandler.bind(this));\n\n\t\t\t// FIXME handler instances stored, but never used\n\t\t\tthis._enabledHandler = this._c._addSysHandler(this._handleEnabled.bind(this), this._NS, 'enabled');\n\t\t\tthis._resumeFailedHandler = this._c._addSysHandler(this._handleResumeFailed.bind(this), this._NS, 'failed');\n\t\t\tthis._resumedHandler =  this._c._addSysHandler(this._handleResumed.bind(this), this._NS,'resumed');\n\n\t\t} else if (status === Strophe.Status.BINDREQUIRED)  {\n\t\t\tthis._c.jid = this._storedJid;\n\n\t\t\t// Restore Strophe handlers\n\t\t\tfor (const property in this._resumeState) {\n\t\t\t\tthis._c[property] = this._resumeState[property];\n\t\t\t}\n\n\t\t\t// FIXME check conditions if there's session ID and if enabled\n\t\t\tthis._c.send($build('resume', {\n\t\t\t\txmlns: this._NS,\n\t\t\t\th: this._clientProcessedStanzasCounter,\n\t\t\t\tprevid: this._resumeToken\n\t\t\t}));\n\t\t\tthis._c.flush();\n\t\t} else if (status === Strophe.Status.ERROR) {\n\t\t\tthis.logging && Strophe.debug('SM cleared resume token on error');\n\t\t\tthis._resumeToken = undefined;\n\t\t}\n\t},\n\n\t/**\n\t* This method overrides the send method implemented by Strophe.Connection\n\t* to count outgoing stanzas\n\t*\n\t* @method Send\n\t* @public\n\t*/\n\txmlOutput: function(elem) {\n\t\tif (Strophe.isTagEqual(elem, 'iq') ||\n\t\t\tStrophe.isTagEqual(elem, 'presence') ||\n\t\t\tStrophe.isTagEqual(elem, 'message')) {\n\t\t\tthis._increaseSentStanzasCounter(elem);\n\t\t}\n\n\t\treturn this._originalXMLOutput.call(this._c, elem);\n\t},\n\n\t_handleEnabled: function(elem) {\n\t\tthis._isStreamManagementEnabled = true;\n\t\t// FIXME fail if requested, but not enabled\n\t\tthis._resumeToken = elem.getAttribute('resume') === 'true' && elem.getAttribute('id');\n\n\t\tthis._c.resume();\n\n\t\treturn true;\n\t},\n\n\t_handleResumeFailed: function(elem) {\n\t\tconst error = elem && elem.firstElementChild && elem.firstElementChild.tagName;\n\n\t\tthis._c._changeConnectStatus(Strophe.Status.ERROR, error, elem);\n\t\tthis._c._doDisconnect();\n\n\t\treturn true;\n\t},\n\n\t_handleResumed: function(elem) {\n\t\t// FIXME check if in the correct state\n\t\tvar handledCount = parseInt(elem.getAttribute('h'));\n\t\tthis._handleAcknowledgedStanzas(handledCount, this._serverProcesssedStanzasCounter);\n\n\t\tthis._resuming = false;\n\t\tthis._c.do_bind = false; // No need to bind our resource anymore\n\t\tthis._c.authenticated = true;\n\t\tthis._c.restored = true;\n\n\t\tif (this._unacknowledgedStanzas.length > 0) {\n\t\t\tthis.logging && Strophe.debug('SM Sending unacknowledged stanzas', this._unacknowledgedStanzas);\n\t\t\tfor(const stanza of this._unacknowledgedStanzas) {\n\t\t\t\tthis._c.send(stanza);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.logging && Strophe.debug('SM No unacknowledged stanzas', this._unacknowledgedStanzas);\n\t\t}\n\n\t\tthis._c._changeConnectStatus(Strophe.Status.CONNECTED, null);\n\n\t\treturn true;\n\t},\n\n\t_incomingStanzaHandler: function(elem) {\n\t\tif (Strophe.isTagEqual(elem, 'iq') || Strophe.isTagEqual(elem, 'presence') || Strophe.isTagEqual(elem, 'message'))  {\n\t\t\tthis._increaseReceivedStanzasCounter();\n\n\t\t\tif (this.autoSendCountOnEveryIncomingStanza) {\n\t\t\t\tthis._answerProcessedStanzas();\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t_handleAcknowledgedStanzas: function(reportedHandledCount, lastKnownHandledCount) {\n\t\tvar delta = reportedHandledCount - lastKnownHandledCount;\n\n\t\tif (delta < 0) {\n\t\t\tthis._throwError('New reported stanza count lower than previous. New: ' + reportedHandledCount + ' - Previous: ' + lastKnownHandledCount);\n\t\t}\n\n\t\tif (delta > this._unacknowledgedStanzas.length) {\n\t\t\tthis._throwError('Higher reported acknowledge count than unacknowledged stanzas. Reported Acknowledge Count: ' + delta + ' - Unacknowledge Stanza Count: ' + this._unacknowledgedStanzas.length + ' - New: ' + reportedHandledCount + ' - Previous: ' + lastKnownHandledCount);\n\t\t}\n\n\t\tfor(var i = 0; i < delta; i++) {\n\t\t\tvar stanza = this._unacknowledgedStanzas.shift();\n\t\t\tfor (var j = 0; j < this._acknowledgedStanzaListeners.length; j++) {\n\t\t\t\tthis._acknowledgedStanzaListeners[j](stanza);\n\t\t\t}\n\t\t}\n\n\t\tif (this.logging && this._unacknowledgedStanzas.length > 0) {\n\t\t\tStrophe.warn('SM Unacknowledged stanzas', this._unacknowledgedStanzas);\n\t\t}\n\n\t\tthis._serverProcesssedStanzasCounter = reportedHandledCount;\n\n\t\tif (this.requestResponseInterval > 0) {\n\t\t\tthis._requestResponseIntervalCount = 0;\n\t\t}\n\t},\n\n\t_handleServerRequestHandler: function() {\n\t\tthis._answerProcessedStanzas();\n\n\t\treturn true;\n\t},\n\n\t_handleServerAck: function(elem){\n\t\tvar handledCount = parseInt(elem.getAttribute('h'));\n\t\tthis._handleAcknowledgedStanzas(handledCount, this._serverProcesssedStanzasCounter);\n\n\t\treturn true;\n\t},\n\n\t_answerProcessedStanzas: function() {\n\t\tif (this._isStreamManagementEnabled) {\n\t\t\tthis._c.send($build('a', { xmlns: this._NS, h: this._clientProcessedStanzasCounter }));\n\t\t}\n\t},\n\n\t_increaseSentStanzasCounter: function(elem) {\n\t\tif (this._isStreamManagementEnabled) {\n\t\t\tif (this._unacknowledgedStanzas.indexOf(elem) !== -1) {\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._unacknowledgedStanzas.push(elem);\n\t\t\tthis._clientSentStanzasCounter++;\n\n\t\t\tif (this.requestResponseInterval > 0) {\n\t\t\t\tthis._requestResponseIntervalCount++;\n\n\t\t\t\tif (this._requestResponseIntervalCount === this.requestResponseInterval) {\n\t\t\t\t\t// FIXME Can not call send from onIdle.\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (this._connectionStatus === Strophe.Status.CONNECTED) {\n\t\t\t\t\t\t\tthis.requestAcknowledgement();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_increaseReceivedStanzasCounter: function() {\n\t\tif (this._isStreamManagementEnabled) {\n\t\t\tthis._clientProcessedStanzasCounter++;\n\t\t}\n\t},\n\n\t_throwError: function(msg) {\n\t\tStrophe.error(msg);\n\t\tthrow new Error(msg);\n\t}\n\n});\n"],"names":["Strophe","$build"],"mappings":";;;;;;CAEA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACAA,mBAAO,CAAC,mBAAmB,CAAC,kBAAkB,EAAE;AAChD;CACA;CACA;CACA;CACA,CAAC,OAAO,EAAE,IAAI;AACd;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,kCAAkC,EAAE,KAAK;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,uBAAuB,EAAE,CAAC;AAC3B;CACA;CACA;CACA;CACA;CACA,CAAC,EAAE,EAAE,IAAI;AACT;CACA;CACA;CACA;CACA;CACA,CAAC,GAAG,EAAE,eAAe;AACrB;CACA;CACA;CACA;CACA;CACA,CAAC,0BAA0B,EAAE,KAAK;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,+BAA+B,EAAE,IAAI;AACtC;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,8BAA8B,EAAE,IAAI;AACrC;CACA;CACA;CACA;CACA;CACA,CAAC,yBAAyB,EAAE,IAAI;AAChC;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,kBAAkB,EAAE,IAAI;AACzB;CACA;CACA;CACA;CACA;CACA,CAAC,eAAe,EAAE,IAAI;AACtB;CACA;CACA;CACA;CACA;CACA,CAAC,gBAAgB,EAAE,IAAI;AACvB;CACA;CACA;CACA;CACA,CAAC,6BAA6B,EAAE,CAAC;AACjC;CACA;CACA;CACA;CACA;CACA,CAAC,YAAY,EAAE,KAAK;AACpB;CACA;CACA;CACA;CACA,CAAC,sBAAsB,EAAE,EAAE;AAC3B;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,4BAA4B,EAAE,EAAE;AACjC;CACA,CAAC,6BAA6B,EAAE,SAAS,QAAQ,EAAE;CACnD,EAAE,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;CACnD,EAAE;AACF;CACA,CAAC,MAAM,EAAE,SAAS,MAAM,EAAE;CAC1B,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;CAC1B,GAAG,MAAM,IAAI,KAAK,CAAC,qDAAqD,C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"}